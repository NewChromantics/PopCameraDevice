name: Build Osx

env:
  BuildProject: PopCameraDevice.xcodeproj
  BuildScheme: PopCameraDevice

on: 
  push:
    branches:
      - master

jobs:
  buildosx:
    runs-on: [self-hosted, macOS]
    
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'
    # https://coderwall.com/p/rv2lgw/use-xcodebuild-to-build-workspace-vs-project
    # https://github.community/t5/GitHub-Actions/steps-output/td-p/30947
    - name: GetTargetBuildDir
      id: GetTargetBuildDir
      run: |
        echo "Setting target build dir"
        echo "##[set-output name=TargetBuildDir;]$(xcodebuild -workspace $BuildProject/project.xcworkspace -scheme $BuildScheme -showBuildSettings | grep TARGET_BUILD_DIR | sed -e 's/.*TARGET_BUILD_DIR = //')"

      # https://github.com/marketplace/actions/import-code-signing-certificates
      # create a P12 certificate, from xcode accounts, manage certificates
      # copy a base64 encoded certificate into secrets
      #   cat Certificate.p12 | base64 | pbcopy
    - run: echo "NEWCHROMANTICS_APPLE_DEV_CERTIFICATE_PASSWORD = ${{ secrets.NEWCHROMANTICS_APPLE_DEV_CERTIFICATE_PASSWORD }}"
    - name: Import codesign certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        # turned off keychain generation as it errors on 2nd run
        create-keychain: false
        p12-file-base64: ${{ secrets.NEWCHROMANTICS_APPLE_DEV_CERTIFICATE_P12 }}
        p12-password: ${{ secrets.NEWCHROMANTICS_APPLE_DEV_CERTIFICATE_PASSWORD }}
  
    - name: compile
      env: 
          TargetBuildDir: ${{steps.GetTargetBuildDir.outputs.TargetBuildDir}}
      run: |
          xcodebuild -workspace $BuildProject/project.xcworkspace -scheme $BuildScheme -showBuildSettings
          xcodebuild -workspace $BuildProject/project.xcworkspace -list
          xcodebuild -workspace $BuildProject/project.xcworkspace -scheme $BuildScheme
      
    - name: List artifacts
      env: 
          BuildDirectory: ${{steps.GetTargetBuildDir.outputs.TargetBuildDir}}

      run: |
        echo "Build Directory ($BuildDirectory) contents"
        ls $BuildDirectory
    
    # do not use env here: ##[error]Path does not exist d:\a\PopH264\PopH264\$Env:GITHUB_WORKSPACE\PopH264.visualstudio\Debug
    - uses: actions/upload-artifact@v1
      with:
        name: PopCameraDevice_Osx.framework
        path: ${{steps.GetTargetBuildDir.outputs.TargetBuildDir}}/PopCameraDevice_Osx.framework
        
#PopH264.visualstudio\Debug\PopH264.dll
