//	config for OSX bundle apps
//#include "PopApp.xcconfig"

#include "../Source/Version.xcconfig"

CLANG_CXX_LANGUAGE_STANDARD = c++20

GCC_PREPROCESSOR_DEFINITIONS = $(inherited) TARGET_OSX ENABLE_FREENECT ENABLE_FREENECT2 //ENABLE_KINECTAZURE
INFOPLIST_FILE = $(SRCROOT)/Info.plist

BROADWAY_PATH = $(SRCROOT)/Source/Broadway/Decoder
LIBFREENECT_PATH = $(SRCROOT)/Source/Libs/LibFreenect
LIBFREENECT2_PATH = $(SRCROOT)/Source/Libs/LibFreenect2
LIBFREENECT2_BUILD_PATH = $(LIBFREENECT2_PATH)/Build
KINECTAZURE_PATH = $(SRCROOT)/Source/Libs/Microsoft.Azure.Kinect.Sensor.1.4.1
SOYLIB_PATH = $(SRCROOT)/Source/SoyLib/src

LIBUSB_HEADER_PATH = $(SRCROOT)/Source/LibUsb/Xcode


HEADER_SEARCH_PATHS = $(HEADER_SEARCH_PATHS) $(inherited) $(SOYLIB_PATH) $(BROADWAY_PATH)/inc $(LIBFREENECT2_PATH)/LibFreenect2/include/ $(LIBFREENECT2_BUILD_PATH)/ $(LIBFREENECT_PATH)/ $(KINECTAZURE_PATH)/build/native/include/ $(LIBUSB_HEADER_PATH)
LIBRARY_SEARCH_PATHS = $(LIBRARY_SEARCH_PATHS) $(inherited) $(LIBFREENECT2_BUILD_PATH)/lib/ $(LIBFREENECT_PATH)/

//	-fdeclspec just as we're testing kinectazure headers on osx
OTHER_CFLAGS = -Wno-ambiguous-macro -fdeclspec

// tsdk: Mirroring config from PopH264
BUILD_LIBRARY_FOR_DISTRIBUTION = YES


//	this sets the linker to compile with swift version X (default is blank, 0.0.0)
//	this fixes "xyz" requires 1.0.0 and "this" is 0.0.0 error as apple cannot mix & match
//	swift binaries any more from different frameworks
//	gr: removed this, poph264 doesnt have it... must be from some old swift requirement?
//DYLIB_COMPATIBILITY_VERSION = 1

//EMBEDDED_CONTENT_CONTAINS_SWIFT = YES

//	from 2022/xcode 14, bitcode is required to be OFF on IOS
//	but with bitcode, we end up getting xcode12 bitcode vs xcode13 bitcode errors, which we want to avoid
ENABLE_BITCODE = NO

//	default project settings, but make consistent across framework & bundle
COMBINE_HIDPI_IMAGES = YES
DYLIB_INSTALL_NAME_BASE = @rpath
LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/../Frameworks @loader_path/Frameworks
DEFINES_MODULE = YES
FRAMEWORK_VERSION = A
